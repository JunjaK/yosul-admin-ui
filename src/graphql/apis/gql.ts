/* eslint-disable */
import * as types from './graphql';
import type { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "query systemCode {\n  getSystemCodeAll {\n    isDeleted\n    parentCdId\n    cdValue\n    cdType\n    cdTitle\n    cdId\n  }\n}\n\nquery getUser($createdAfter: String, $createdBefore: String, $loginId: Int, $nickname: String, $updatedAfter: String, $updatedBefore: String, $userId: Int) {\n  getUser(\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n    userId: $userId\n  ) {\n    birthday\n    createdAt\n    email\n    level\n    loginId\n    nickname\n    phoneNumber\n    profileImageId\n    updatedAt\n    userId\n    userProfileImg\n  }\n}\n\nquery getUserList($pageNum: Int!, $perPage: Int!, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $updatedAfter: String, $updatedBefore: String, $userId: ID) {\n  getUserList(\n    pageNum: $pageNum\n    perPage: $perPage\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n    userId: $userId\n    updatedAfter: $updatedAfter\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      userStatus\n      userId\n      updatedAt\n      signUpType\n      phoneNumber\n      nickname\n      loginId\n      level\n      createdAt\n      email\n      birthday\n    }\n  }\n}\n\nquery getAlcoholDetail($alcoholId: ID!) {\n  getAlcoholToAlcholId(alcoholId: $alcoholId) {\n    name\n    type\n    updatedAt\n    subType\n    isDeleted\n    deletedAt\n    distilillery\n    createdAt\n    alcoholId\n    country\n  }\n}\n\nquery getAlcoholList($pageNum: Int!, $perPage: Int!, $country: String, $createdAfter: String, $createdBefore: String, $name: String, $sortBy: String, $updatedAfter: String, $sortDirection: String, $updatedBefore: String) {\n  getAlcoholListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    country: $country\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    name: $name\n    sortBy: $sortBy\n    updatedAfter: $updatedAfter\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    perPage\n    totalPages\n    totalCount\n    data {\n      name\n      type\n      updatedAt\n      subType\n      isDeleted\n      deletedAt\n      distilillery\n      createdAt\n      alcoholId\n      country\n    }\n  }\n}\n\nmutation createAlcohol($name: String!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $subType: Int!, $type: Int!) {\n  alcoholCreate(\n    request: {name: $name, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, subType: $subType, type: $type}\n  ) {\n    alcoholId\n    country\n    createdAt\n    deletedAt\n    distilillery\n    isDeleted\n    name\n    type\n    subType\n    updatedAt\n  }\n}\n\nmutation deleteAlcohol($alcoholId: Int!, $isDeleted: Boolean!) {\n  alcoholDeleted(request: {alcoholId: $alcoholId, isDeleted: $isDeleted}) {\n    updatedAt\n    subType\n    type\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nmutation modifyAlcohol($alcoholId: Int!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $name: String!, $subType: Int!, $type: Int!) {\n  alcoholModified(\n    request: {alcoholId: $alcoholId, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, name: $name, subType: $subType, type: $type}\n  ) {\n    updatedAt\n    type\n    subType\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nquery getTastingNoteList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNotesForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    title: $title\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      review\n      rating\n      userId\n      userNickName\n      title\n      isDeleted\n    }\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nquery getTastingNoteDetail($tastingNoteId: ID!, $userId: ID!) {\n  getTastingNotesId(tastingNoteId: $tastingNoteId, userId: $userId) {\n    acidity\n    afterglow\n    alcoholId\n    alcoholName\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    isDeleted\n    isLiked\n    likeCount\n    commentCount\n    hashTag\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sweety\n    tastingNoteId\n    sparkling\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation modifyTastingNote($tastingNote: TnRequestModify!) {\n  tnModify(request: $tastingNote) {\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    tastingNoteId\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    tastingNoteId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation deleteTastingNote($tastingNoteId: ID!) {\n  tnDeleted(request: {tastingNoteId: $tastingNoteId}) {\n    tastingNoteId\n  }\n}\n\nquery getTastingNoteTempList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNoteTempListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    loginId: $loginId\n    createdBefore: $createdBefore\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: \"\"\n    title: \"\"\n    updatedAfter: \"\"\n    updatedBefore: \"\"\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      isDeleted\n      rating\n      review\n      title\n      updatedAt\n      userId\n      userNickName\n    }\n  }\n}\n\nmutation modifyTastingNoteTemp($tastingNoteTemp: TnTRequestModify!) {\n  tnTModify(request: $tastingNoteTemp) {\n    tastingNoteTempId\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFileGroupId\n  }\n}\n\nmutation deleteTastingNoteTemp($tastingNoteTempId: ID!) {\n  tnTDeleted(request: {tastingNoteTempId: $tastingNoteTempId}) {\n    tastingNoteTempId\n  }\n}\n\nquery getCommentsList($pageNum: Int!, $perPage: Int!, $loginId: String!, $nickname: String!, $sortBy: String!, $sortDirection: String!, $tastingNoteTitle: String!) {\n  getCommentsForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    tastingNoteTitle: $tastingNoteTitle\n  ) {\n    currentPage\n    perPage\n    data {\n      content\n      createdAt\n      deletedAt\n      depth\n      likeCount\n      parentId\n      updatedAt\n      userId\n      userNickName\n      commentId\n    }\n    totalCount\n    totalPages\n  }\n}\n\nquery getRepliesByParentId($parentId: ID!, $pageNum: Int!, $perPage: Int!, $userId: ID!) {\n  getRepliesByParentId(\n    pageNum: $pageNum\n    perPage: $perPage\n    parentId: $parentId\n    userId: $userId\n  ) {\n    data {\n      userProfileImg\n      userNickName\n      userId\n      updatedAt\n      parentId\n      depth\n      createdAt\n      deletedAt\n      content\n      commentId\n      isLiked\n      likeCount\n    }\n    currentPage\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nmutation cmtDelete($commentId: ID!, $userId: Int!) {\n  deleteComment(request: {commentId: $commentId, userId: $userId}) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    deletedAt\n  }\n}\n\nmutation cmtModify($cmtRequestAdd: CmtRequestModify!) {\n  editComment(request: $cmtRequestAdd) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    updatedAt\n  }\n}": typeof types.SystemCodeDocument,
};
const documents: Documents = {
    "query systemCode {\n  getSystemCodeAll {\n    isDeleted\n    parentCdId\n    cdValue\n    cdType\n    cdTitle\n    cdId\n  }\n}\n\nquery getUser($createdAfter: String, $createdBefore: String, $loginId: Int, $nickname: String, $updatedAfter: String, $updatedBefore: String, $userId: Int) {\n  getUser(\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n    userId: $userId\n  ) {\n    birthday\n    createdAt\n    email\n    level\n    loginId\n    nickname\n    phoneNumber\n    profileImageId\n    updatedAt\n    userId\n    userProfileImg\n  }\n}\n\nquery getUserList($pageNum: Int!, $perPage: Int!, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $updatedAfter: String, $updatedBefore: String, $userId: ID) {\n  getUserList(\n    pageNum: $pageNum\n    perPage: $perPage\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n    userId: $userId\n    updatedAfter: $updatedAfter\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      userStatus\n      userId\n      updatedAt\n      signUpType\n      phoneNumber\n      nickname\n      loginId\n      level\n      createdAt\n      email\n      birthday\n    }\n  }\n}\n\nquery getAlcoholDetail($alcoholId: ID!) {\n  getAlcoholToAlcholId(alcoholId: $alcoholId) {\n    name\n    type\n    updatedAt\n    subType\n    isDeleted\n    deletedAt\n    distilillery\n    createdAt\n    alcoholId\n    country\n  }\n}\n\nquery getAlcoholList($pageNum: Int!, $perPage: Int!, $country: String, $createdAfter: String, $createdBefore: String, $name: String, $sortBy: String, $updatedAfter: String, $sortDirection: String, $updatedBefore: String) {\n  getAlcoholListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    country: $country\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    name: $name\n    sortBy: $sortBy\n    updatedAfter: $updatedAfter\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    perPage\n    totalPages\n    totalCount\n    data {\n      name\n      type\n      updatedAt\n      subType\n      isDeleted\n      deletedAt\n      distilillery\n      createdAt\n      alcoholId\n      country\n    }\n  }\n}\n\nmutation createAlcohol($name: String!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $subType: Int!, $type: Int!) {\n  alcoholCreate(\n    request: {name: $name, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, subType: $subType, type: $type}\n  ) {\n    alcoholId\n    country\n    createdAt\n    deletedAt\n    distilillery\n    isDeleted\n    name\n    type\n    subType\n    updatedAt\n  }\n}\n\nmutation deleteAlcohol($alcoholId: Int!, $isDeleted: Boolean!) {\n  alcoholDeleted(request: {alcoholId: $alcoholId, isDeleted: $isDeleted}) {\n    updatedAt\n    subType\n    type\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nmutation modifyAlcohol($alcoholId: Int!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $name: String!, $subType: Int!, $type: Int!) {\n  alcoholModified(\n    request: {alcoholId: $alcoholId, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, name: $name, subType: $subType, type: $type}\n  ) {\n    updatedAt\n    type\n    subType\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nquery getTastingNoteList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNotesForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    title: $title\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      review\n      rating\n      userId\n      userNickName\n      title\n      isDeleted\n    }\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nquery getTastingNoteDetail($tastingNoteId: ID!, $userId: ID!) {\n  getTastingNotesId(tastingNoteId: $tastingNoteId, userId: $userId) {\n    acidity\n    afterglow\n    alcoholId\n    alcoholName\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    isDeleted\n    isLiked\n    likeCount\n    commentCount\n    hashTag\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sweety\n    tastingNoteId\n    sparkling\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation modifyTastingNote($tastingNote: TnRequestModify!) {\n  tnModify(request: $tastingNote) {\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    tastingNoteId\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    tastingNoteId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation deleteTastingNote($tastingNoteId: ID!) {\n  tnDeleted(request: {tastingNoteId: $tastingNoteId}) {\n    tastingNoteId\n  }\n}\n\nquery getTastingNoteTempList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNoteTempListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    loginId: $loginId\n    createdBefore: $createdBefore\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: \"\"\n    title: \"\"\n    updatedAfter: \"\"\n    updatedBefore: \"\"\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      isDeleted\n      rating\n      review\n      title\n      updatedAt\n      userId\n      userNickName\n    }\n  }\n}\n\nmutation modifyTastingNoteTemp($tastingNoteTemp: TnTRequestModify!) {\n  tnTModify(request: $tastingNoteTemp) {\n    tastingNoteTempId\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFileGroupId\n  }\n}\n\nmutation deleteTastingNoteTemp($tastingNoteTempId: ID!) {\n  tnTDeleted(request: {tastingNoteTempId: $tastingNoteTempId}) {\n    tastingNoteTempId\n  }\n}\n\nquery getCommentsList($pageNum: Int!, $perPage: Int!, $loginId: String!, $nickname: String!, $sortBy: String!, $sortDirection: String!, $tastingNoteTitle: String!) {\n  getCommentsForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    tastingNoteTitle: $tastingNoteTitle\n  ) {\n    currentPage\n    perPage\n    data {\n      content\n      createdAt\n      deletedAt\n      depth\n      likeCount\n      parentId\n      updatedAt\n      userId\n      userNickName\n      commentId\n    }\n    totalCount\n    totalPages\n  }\n}\n\nquery getRepliesByParentId($parentId: ID!, $pageNum: Int!, $perPage: Int!, $userId: ID!) {\n  getRepliesByParentId(\n    pageNum: $pageNum\n    perPage: $perPage\n    parentId: $parentId\n    userId: $userId\n  ) {\n    data {\n      userProfileImg\n      userNickName\n      userId\n      updatedAt\n      parentId\n      depth\n      createdAt\n      deletedAt\n      content\n      commentId\n      isLiked\n      likeCount\n    }\n    currentPage\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nmutation cmtDelete($commentId: ID!, $userId: Int!) {\n  deleteComment(request: {commentId: $commentId, userId: $userId}) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    deletedAt\n  }\n}\n\nmutation cmtModify($cmtRequestAdd: CmtRequestModify!) {\n  editComment(request: $cmtRequestAdd) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    updatedAt\n  }\n}": types.SystemCodeDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "query systemCode {\n  getSystemCodeAll {\n    isDeleted\n    parentCdId\n    cdValue\n    cdType\n    cdTitle\n    cdId\n  }\n}\n\nquery getUser($createdAfter: String, $createdBefore: String, $loginId: Int, $nickname: String, $updatedAfter: String, $updatedBefore: String, $userId: Int) {\n  getUser(\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n    userId: $userId\n  ) {\n    birthday\n    createdAt\n    email\n    level\n    loginId\n    nickname\n    phoneNumber\n    profileImageId\n    updatedAt\n    userId\n    userProfileImg\n  }\n}\n\nquery getUserList($pageNum: Int!, $perPage: Int!, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $updatedAfter: String, $updatedBefore: String, $userId: ID) {\n  getUserList(\n    pageNum: $pageNum\n    perPage: $perPage\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n    userId: $userId\n    updatedAfter: $updatedAfter\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      userStatus\n      userId\n      updatedAt\n      signUpType\n      phoneNumber\n      nickname\n      loginId\n      level\n      createdAt\n      email\n      birthday\n    }\n  }\n}\n\nquery getAlcoholDetail($alcoholId: ID!) {\n  getAlcoholToAlcholId(alcoholId: $alcoholId) {\n    name\n    type\n    updatedAt\n    subType\n    isDeleted\n    deletedAt\n    distilillery\n    createdAt\n    alcoholId\n    country\n  }\n}\n\nquery getAlcoholList($pageNum: Int!, $perPage: Int!, $country: String, $createdAfter: String, $createdBefore: String, $name: String, $sortBy: String, $updatedAfter: String, $sortDirection: String, $updatedBefore: String) {\n  getAlcoholListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    country: $country\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    name: $name\n    sortBy: $sortBy\n    updatedAfter: $updatedAfter\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    perPage\n    totalPages\n    totalCount\n    data {\n      name\n      type\n      updatedAt\n      subType\n      isDeleted\n      deletedAt\n      distilillery\n      createdAt\n      alcoholId\n      country\n    }\n  }\n}\n\nmutation createAlcohol($name: String!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $subType: Int!, $type: Int!) {\n  alcoholCreate(\n    request: {name: $name, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, subType: $subType, type: $type}\n  ) {\n    alcoholId\n    country\n    createdAt\n    deletedAt\n    distilillery\n    isDeleted\n    name\n    type\n    subType\n    updatedAt\n  }\n}\n\nmutation deleteAlcohol($alcoholId: Int!, $isDeleted: Boolean!) {\n  alcoholDeleted(request: {alcoholId: $alcoholId, isDeleted: $isDeleted}) {\n    updatedAt\n    subType\n    type\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nmutation modifyAlcohol($alcoholId: Int!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $name: String!, $subType: Int!, $type: Int!) {\n  alcoholModified(\n    request: {alcoholId: $alcoholId, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, name: $name, subType: $subType, type: $type}\n  ) {\n    updatedAt\n    type\n    subType\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nquery getTastingNoteList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNotesForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    title: $title\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      review\n      rating\n      userId\n      userNickName\n      title\n      isDeleted\n    }\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nquery getTastingNoteDetail($tastingNoteId: ID!, $userId: ID!) {\n  getTastingNotesId(tastingNoteId: $tastingNoteId, userId: $userId) {\n    acidity\n    afterglow\n    alcoholId\n    alcoholName\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    isDeleted\n    isLiked\n    likeCount\n    commentCount\n    hashTag\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sweety\n    tastingNoteId\n    sparkling\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation modifyTastingNote($tastingNote: TnRequestModify!) {\n  tnModify(request: $tastingNote) {\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    tastingNoteId\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    tastingNoteId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation deleteTastingNote($tastingNoteId: ID!) {\n  tnDeleted(request: {tastingNoteId: $tastingNoteId}) {\n    tastingNoteId\n  }\n}\n\nquery getTastingNoteTempList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNoteTempListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    loginId: $loginId\n    createdBefore: $createdBefore\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: \"\"\n    title: \"\"\n    updatedAfter: \"\"\n    updatedBefore: \"\"\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      isDeleted\n      rating\n      review\n      title\n      updatedAt\n      userId\n      userNickName\n    }\n  }\n}\n\nmutation modifyTastingNoteTemp($tastingNoteTemp: TnTRequestModify!) {\n  tnTModify(request: $tastingNoteTemp) {\n    tastingNoteTempId\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFileGroupId\n  }\n}\n\nmutation deleteTastingNoteTemp($tastingNoteTempId: ID!) {\n  tnTDeleted(request: {tastingNoteTempId: $tastingNoteTempId}) {\n    tastingNoteTempId\n  }\n}\n\nquery getCommentsList($pageNum: Int!, $perPage: Int!, $loginId: String!, $nickname: String!, $sortBy: String!, $sortDirection: String!, $tastingNoteTitle: String!) {\n  getCommentsForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    tastingNoteTitle: $tastingNoteTitle\n  ) {\n    currentPage\n    perPage\n    data {\n      content\n      createdAt\n      deletedAt\n      depth\n      likeCount\n      parentId\n      updatedAt\n      userId\n      userNickName\n      commentId\n    }\n    totalCount\n    totalPages\n  }\n}\n\nquery getRepliesByParentId($parentId: ID!, $pageNum: Int!, $perPage: Int!, $userId: ID!) {\n  getRepliesByParentId(\n    pageNum: $pageNum\n    perPage: $perPage\n    parentId: $parentId\n    userId: $userId\n  ) {\n    data {\n      userProfileImg\n      userNickName\n      userId\n      updatedAt\n      parentId\n      depth\n      createdAt\n      deletedAt\n      content\n      commentId\n      isLiked\n      likeCount\n    }\n    currentPage\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nmutation cmtDelete($commentId: ID!, $userId: Int!) {\n  deleteComment(request: {commentId: $commentId, userId: $userId}) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    deletedAt\n  }\n}\n\nmutation cmtModify($cmtRequestAdd: CmtRequestModify!) {\n  editComment(request: $cmtRequestAdd) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    updatedAt\n  }\n}"): (typeof documents)["query systemCode {\n  getSystemCodeAll {\n    isDeleted\n    parentCdId\n    cdValue\n    cdType\n    cdTitle\n    cdId\n  }\n}\n\nquery getUser($createdAfter: String, $createdBefore: String, $loginId: Int, $nickname: String, $updatedAfter: String, $updatedBefore: String, $userId: Int) {\n  getUser(\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n    userId: $userId\n  ) {\n    birthday\n    createdAt\n    email\n    level\n    loginId\n    nickname\n    phoneNumber\n    profileImageId\n    updatedAt\n    userId\n    userProfileImg\n  }\n}\n\nquery getUserList($pageNum: Int!, $perPage: Int!, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $updatedAfter: String, $updatedBefore: String, $userId: ID) {\n  getUserList(\n    pageNum: $pageNum\n    perPage: $perPage\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n    userId: $userId\n    updatedAfter: $updatedAfter\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      userStatus\n      userId\n      updatedAt\n      signUpType\n      phoneNumber\n      nickname\n      loginId\n      level\n      createdAt\n      email\n      birthday\n    }\n  }\n}\n\nquery getAlcoholDetail($alcoholId: ID!) {\n  getAlcoholToAlcholId(alcoholId: $alcoholId) {\n    name\n    type\n    updatedAt\n    subType\n    isDeleted\n    deletedAt\n    distilillery\n    createdAt\n    alcoholId\n    country\n  }\n}\n\nquery getAlcoholList($pageNum: Int!, $perPage: Int!, $country: String, $createdAfter: String, $createdBefore: String, $name: String, $sortBy: String, $updatedAfter: String, $sortDirection: String, $updatedBefore: String) {\n  getAlcoholListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    country: $country\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    name: $name\n    sortBy: $sortBy\n    updatedAfter: $updatedAfter\n    sortDirection: $sortDirection\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    perPage\n    totalPages\n    totalCount\n    data {\n      name\n      type\n      updatedAt\n      subType\n      isDeleted\n      deletedAt\n      distilillery\n      createdAt\n      alcoholId\n      country\n    }\n  }\n}\n\nmutation createAlcohol($name: String!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $subType: Int!, $type: Int!) {\n  alcoholCreate(\n    request: {name: $name, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, subType: $subType, type: $type}\n  ) {\n    alcoholId\n    country\n    createdAt\n    deletedAt\n    distilillery\n    isDeleted\n    name\n    type\n    subType\n    updatedAt\n  }\n}\n\nmutation deleteAlcohol($alcoholId: Int!, $isDeleted: Boolean!) {\n  alcoholDeleted(request: {alcoholId: $alcoholId, isDeleted: $isDeleted}) {\n    updatedAt\n    subType\n    type\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nmutation modifyAlcohol($alcoholId: Int!, $brand: Int!, $country: String!, $distilillery: String!, $isDeleted: Boolean!, $name: String!, $subType: Int!, $type: Int!) {\n  alcoholModified(\n    request: {alcoholId: $alcoholId, brand: $brand, country: $country, distilillery: $distilillery, isDeleted: $isDeleted, name: $name, subType: $subType, type: $type}\n  ) {\n    updatedAt\n    type\n    subType\n    name\n    isDeleted\n    distilillery\n    deletedAt\n    createdAt\n    country\n    alcoholId\n  }\n}\n\nquery getTastingNoteList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNotesForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    createdBefore: $createdBefore\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    title: $title\n    updatedAfter: $updatedAfter\n    updatedBefore: $updatedBefore\n  ) {\n    currentPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      review\n      rating\n      userId\n      userNickName\n      title\n      isDeleted\n    }\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nquery getTastingNoteDetail($tastingNoteId: ID!, $userId: ID!) {\n  getTastingNotesId(tastingNoteId: $tastingNoteId, userId: $userId) {\n    acidity\n    afterglow\n    alcoholId\n    alcoholName\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    isDeleted\n    isLiked\n    likeCount\n    commentCount\n    hashTag\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sweety\n    tastingNoteId\n    sparkling\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation modifyTastingNote($tastingNote: TnRequestModify!) {\n  tnModify(request: $tastingNote) {\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    tastingNoteId\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFiles {\n      attachFileId\n      filePath\n      originalFileName\n    }\n    tastingNoteId\n    updatedAt\n    createdAt\n  }\n}\n\nmutation deleteTastingNote($tastingNoteId: ID!) {\n  tnDeleted(request: {tastingNoteId: $tastingNoteId}) {\n    tastingNoteId\n  }\n}\n\nquery getTastingNoteTempList($pageNum: Int!, $perPage: Int!, $alcohol: String, $createdAfter: String, $createdBefore: String, $loginId: String, $nickname: String, $sortBy: String, $sortDirection: String, $title: String, $updatedAfter: String, $updatedBefore: String) {\n  getTastingNoteTempListForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    alcohol: $alcohol\n    createdAfter: $createdAfter\n    loginId: $loginId\n    createdBefore: $createdBefore\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: \"\"\n    title: \"\"\n    updatedAfter: \"\"\n    updatedBefore: \"\"\n  ) {\n    currentPage\n    totalCount\n    totalPages\n    perPage\n    data {\n      alcoholName\n      alcoholId\n      createdAt\n      deletedAt\n      drinkDate\n      isDeleted\n      rating\n      review\n      title\n      updatedAt\n      userId\n      userNickName\n    }\n  }\n}\n\nmutation modifyTastingNoteTemp($tastingNoteTemp: TnTRequestModify!) {\n  tnTModify(request: $tastingNoteTemp) {\n    tastingNoteTempId\n    acidity\n    afterglow\n    alcoholId\n    body\n    color\n    concentration\n    drinkAmount\n    drinkAmountType\n    drinkDate\n    etcScentType\n    fruity\n    grainy\n    hashTag\n    isDeleted\n    pairingRate\n    purchasePrice\n    rating\n    review\n    scentType\n    sparkling\n    sweety\n    temperature\n    title\n    togetherComment\n    togetherFood\n    userId\n    attachFileGroupId\n  }\n}\n\nmutation deleteTastingNoteTemp($tastingNoteTempId: ID!) {\n  tnTDeleted(request: {tastingNoteTempId: $tastingNoteTempId}) {\n    tastingNoteTempId\n  }\n}\n\nquery getCommentsList($pageNum: Int!, $perPage: Int!, $loginId: String!, $nickname: String!, $sortBy: String!, $sortDirection: String!, $tastingNoteTitle: String!) {\n  getCommentsForAdmin(\n    pageNum: $pageNum\n    perPage: $perPage\n    loginId: $loginId\n    nickname: $nickname\n    sortBy: $sortBy\n    sortDirection: $sortDirection\n    tastingNoteTitle: $tastingNoteTitle\n  ) {\n    currentPage\n    perPage\n    data {\n      content\n      createdAt\n      deletedAt\n      depth\n      likeCount\n      parentId\n      updatedAt\n      userId\n      userNickName\n      commentId\n    }\n    totalCount\n    totalPages\n  }\n}\n\nquery getRepliesByParentId($parentId: ID!, $pageNum: Int!, $perPage: Int!, $userId: ID!) {\n  getRepliesByParentId(\n    pageNum: $pageNum\n    perPage: $perPage\n    parentId: $parentId\n    userId: $userId\n  ) {\n    data {\n      userProfileImg\n      userNickName\n      userId\n      updatedAt\n      parentId\n      depth\n      createdAt\n      deletedAt\n      content\n      commentId\n      isLiked\n      likeCount\n    }\n    currentPage\n    perPage\n    totalCount\n    totalPages\n  }\n}\n\nmutation cmtDelete($commentId: ID!, $userId: Int!) {\n  deleteComment(request: {commentId: $commentId, userId: $userId}) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    deletedAt\n  }\n}\n\nmutation cmtModify($cmtRequestAdd: CmtRequestModify!) {\n  editComment(request: $cmtRequestAdd) {\n    commentId\n    parentId\n    tastingNoteId\n    userId\n    updatedAt\n  }\n}"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;